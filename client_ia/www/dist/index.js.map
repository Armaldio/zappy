{"version":3,"sources":["../index.js"],"names":["socket","io","on","console","log","emit","data","$datas","$","behaviour","html","name","description","str","each","inventory","value","key","index","JSON","stringify","queue"],"mappings":";;AAAA,IAAIA,SAASC,GAAG,2BAAH,CAAb;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCAD,OAAOE,EAAP,CAAU,SAAV,EAAqB,YAAY;AAChCC,UAAQC,GAAR,CAAY,WAAZ;;AAEAJ,SAAOK,IAAP,CAAY,KAAZ,EAAmB,OAAnB;AACA,CAJD;;AAMAL,OAAOE,EAAP,CAAU,SAAV,EAAqB,UAAUI,IAAV,EAAgB;AACpCH,UAAQC,GAAR,CAAYE,IAAZ;;AAEA,MAAIC,SAASC,EAAE,QAAF,CAAb;;AAEAL,UAAQC,GAAR,CAAYE,KAAKG,SAAjB;;AAEAD,IAAE,SAAF,EAAaE,IAAb,UAAyBJ,KAAK,WAAL,EAAkBK,IAA3C,WAAqDL,KAAKG,SAAL,CAAeG,WAApE;;AAEA,MAAIC,YAAJ;AACAL,IAAEM,IAAF,CAAOR,KAAKS,SAAZ,EAAuB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACtCJ,oBAAcG,KAAd,WAAyBC,GAAzB;AACA,GAFD;AAGAJ;AACAL,IAAE,YAAF,EAAgBE,IAAhB,CAAqBG,GAArB;;AAEAA,QAAM,EAAN;AACAL,IAAEM,IAAF,CAAOR,IAAP,EAAa,UAAUY,KAAV,EAAiBF,KAAjB,EAAwB;AACpCb,YAAQC,GAAR,CAAYc,KAAZ,EAAmBF,KAAnB;AACA,QAAIE,UAAU,WAAV,IAAyBA,UAAU,WAAnC,IAAkDA,UAAU,OAAhE,EACC;AACDL,WAAUK,KAAV,WAAqBC,KAAKC,SAAL,CAAeJ,KAAf,CAArB;AACA,GALD;AAMAR,IAAE,QAAF,EAAYE,IAAZ,CAAiBG,GAAjB;;AAEAA,QAAM,EAAN;AACAL,IAAEM,IAAF,CAAOR,KAAKe,KAAZ,EAAmB,UAAUH,KAAV,EAAiBF,KAAjB,EAAwB;AAC1CH,WAAUG,KAAV;AACA,GAFD;AAGAR,IAAE,QAAF,EAAYE,IAAZ,CAAiBG,GAAjB;AAEA,CA/BD;;AAiCA","file":"index.js","sourcesContent":["let socket = io('http://192.168.0.110:4244');\n\n/*let data = {\n 'inventory'    : {\n food     : 13,\n linemate : 0,\n deraumere: 0,\n sibur    : 1,\n mendiane : 1,\n phiras   : 0,\n thystame : 0\n },\n 'view'         : {\n up   : [[], [], [], []],\n down : [],\n left : [],\n right: []\n },\n 'direction'    : 'up',\n 'queue'        : ['Look'],\n 'behaviour'    : {\n description: 'A default bot',\n name       : 'Default'\n },\n 'flux'         : '[ player, food sibur, food phiras, deraumere phiras ]\\n',\n 'team'         : 'team1',\n 'searchingFood': false,\n 'clientNum'    : 0,\n 'mapSize'      : {\n x: 0,\n y: 10\n },\n 'lastCommand'  : 'Inventory',\n 'totalCommands': 27,\n 'goesUp'       : 3,\n 'level'        : 1,\n 'incantating'  : false\n };*/\n\nsocket.on('connect', function () {\n\tconsole.log(\"Connected\");\n\n\tsocket.emit('msg', \"Hello\")\n});\n\nsocket.on('message', function (data) {\n\tconsole.log(data);\n\n\tvar $datas = $(\"#datas\");\n\t\n\tconsole.log(data.behaviour);\n\n\t$(\"#header\").html(`<h1>${data[\"behaviour\"].name} - ${data.behaviour.description}</h1>`);\n\n\tlet str = `<ul>`;\n\t$.each(data.inventory, (value, key) => {\n\t\tstr += `<li>${value} - ${key}</li>`\n\t});\n\tstr += `</ul>`;\n\t$(\"#inventory\").html(str);\n\n\tstr = \"\";\n\t$.each(data, function (index, value) {\n\t\tconsole.log(index, value);\n\t\tif (index === \"inventory\" || index === \"behaviour\" || index === \"queue\")\n\t\t\treturn;\n\t\tstr += `${index} : ${JSON.stringify(value)} <br>`;\n\t});\n\t$(\"#other\").html(str);\n\n\tstr = \"\";\n\t$.each(data.queue, function (index, value) {\n\t\tstr += `${value}<br>`;\n\t});\n\t$(\"#queue\").html(str);\n\n});\n\n//socket.emit('my other event', {my: 'data'});"]}